N = 100  # количество камней в куче/кучах, необходимое для победы


def f(s, c, m):
    # проверка, что мы достигли определенного количество камней в куче
    # возвращает четность игрока который победил: Нечёт - Петя, Чётные - Ваня
    if s >= N:
        return c % 2 == m % 2

    # предел количества ходов, которые мы установили
    if c == m:
        return 0

    h = [f(s + 1, c + 1, m), f(s * 2, c + 1, m)]

    # Обработка следующего хода: all(h) все ходы (другими словами ниже)
    # X может выиграть своим вторым ходом независимо от того, как будет ходить Y.
    # Меняем all на any если условие: X выиграл своим первым ходом после НЕУДАЧНОГО первого хода Y
    return any(h) if (c + 1) % 2 == m % 2 else all(h)


S = 50  # Максимальное ИЗНАЧАЛЬНОЕ количество камней в куче
# Петя - 1, 3, 5... (например, 3 == ВТОРОЙ ход Пети)
# Ваня - 2, 4, 6... (например, 6 == ТРЕТИЙ ход Вани)
# ход на котором игрок должен победить.
X = 2
for s in range(1, S + 1):
    for m in range(5):
        if f(s, 0, m):
            if m == X:
                print(s, m)
            break


N = 100  # количество камней в куче/кучах, необходимое для победы


def f(s1, s2, c, m):
    # проверка, что мы достигли определенного количество камней в куче
    # возвращает четность игрока который победил: Нечёт - Петя, Чётные - Ваня
    if s1 + s2 >= N:
        return c % 2 == m % 2

    # предел количества ходов, которые мы установили
    if c == m:
        return 0

    # список на все возможные ходы, которые может сделать игрок
    h = [f(s1 + 1, s2, c + 1, m), f(s1 * 2, s2, c + 1, m), f(s1, s2 + 1, c + 1, m), f(s1, s2 * 2, c + 1, m)]

    # Обработка следующего хода: all(h) все ходы (другими словами ниже)
    # X может выиграть своим вторым ходом независимо от того, как будет ходить Y.
    # Меняем all на any если условие: X выиграл своим первым ходом после НЕУДАЧНОГО первого хода Y
    return any(h) if (c + 1) % 2 == m % 2 else all(h)


S = 50  # Максимальное ИЗНАЧАЛЬНОЕ количество камней в кучах
# Петя - 1, 3, 5... (например, 3 == ВТОРОЙ ход Пети)
# Ваня - 2, 4, 6... (например, 6 == ТРЕТИЙ ход Вани)
# ход на котором игрок должен победить.
X = 2

# изначальное количество камней во ВТОРОЙ куче
s2 = 7
for s1 in range(1, S + 1):
    for m in range(5):
        if f(s1, s2, 0, m):
            if m == X:
                print(s1, m)
            break
